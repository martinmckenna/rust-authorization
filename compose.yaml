# docker-compose file managing Nginx and the application
# Loading some variables from the .env file:
#   - DOMAIN: DNS domain name
#   - EMAIL: Maintainer email
#   - APP_FOLDER: Directory containing the application
#   - FLASK_APP: Flask entrypoint
#   - FLASK_ENV: Flask environment

version: "3.9"

services:
  # nginx:
  #   build:
  #     context: ./nginx
  #     args:
  #       DOMAIN: ${DOMAIN}
  #       EMAIL: ${EMAIL}
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - /etc/letsencrypt:/etc/letsencrypt
  #   depends_on:
  #     - application

  application:
    build: ./
    container_name: rust-auth
    environment:
      - APP_ENV=${APP_ENV}
    ports:
      - 5000:5000
    volumes:
      # - ./migrations:/opt/app/migrations
      - ./src:/opt/app/rust-auth/src
    # depends_on:
    #   mysql:
    #     condition: service_healthy

#   db:
      # container_name: postgres-db
#     image: postgres:14.1-alpine
#     restart: always
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#     ports:
#       - '5432:5432'
#     volumes: 
#       - db:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db:
#     driver: local